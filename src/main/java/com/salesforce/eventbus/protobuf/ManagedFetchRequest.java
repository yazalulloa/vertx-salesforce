// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: pubsub_api.proto
// Protobuf Java Version: 4.27.3

package com.salesforce.eventbus.protobuf;

/**
 * <pre>
 *
 * This feature is part of an open beta release and is subject to the applicable
 * Beta Services Terms provided at Agreements and Terms
 * (https://www.salesforce.com/company/legal/agreements/).
 *
 * Request for the ManagedSubscribe streaming RPC method. This request is used to:
 * 1. Establish the initial managed subscribe stream.
 * 2. Request more events from the subscription stream.
 * 3. Commit a Replay ID using CommitReplayRequest.
 * </pre>
 *
 * Protobuf type {@code eventbus.v1.ManagedFetchRequest}
 */
public final class ManagedFetchRequest extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:eventbus.v1.ManagedFetchRequest)
    ManagedFetchRequestOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 3,
      /* suffix= */ "",
      ManagedFetchRequest.class.getName());
  }
  // Use ManagedFetchRequest.newBuilder() to construct.
  private ManagedFetchRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private ManagedFetchRequest() {
    subscriptionId_ = "";
    developerName_ = "";
    authRefresh_ = "";
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.salesforce.eventbus.protobuf.PubSubProto.internal_static_eventbus_v1_ManagedFetchRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.salesforce.eventbus.protobuf.PubSubProto.internal_static_eventbus_v1_ManagedFetchRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.salesforce.eventbus.protobuf.ManagedFetchRequest.class, com.salesforce.eventbus.protobuf.ManagedFetchRequest.Builder.class);
  }

  private int bitField0_;
  public static final int SUBSCRIPTION_ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object subscriptionId_ = "";
  /**
   * <pre>
   *
   * Managed subscription ID or developer name. This value corresponds to the
   * ID or developer name of the ManagedEventSubscription Tooling API record.
   * This value is consumed as part of the first ManagedFetchRequest only.
   * The subscription_id cannot change in subsequent ManagedFetchRequests
   * within the same subscribe stream, but can be omitted for efficiency.
   * </pre>
   *
   * <code>string subscription_id = 1;</code>
   * @return The subscriptionId.
   */
  @java.lang.Override
  public java.lang.String getSubscriptionId() {
    java.lang.Object ref = subscriptionId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      subscriptionId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *
   * Managed subscription ID or developer name. This value corresponds to the
   * ID or developer name of the ManagedEventSubscription Tooling API record.
   * This value is consumed as part of the first ManagedFetchRequest only.
   * The subscription_id cannot change in subsequent ManagedFetchRequests
   * within the same subscribe stream, but can be omitted for efficiency.
   * </pre>
   *
   * <code>string subscription_id = 1;</code>
   * @return The bytes for subscriptionId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSubscriptionIdBytes() {
    java.lang.Object ref = subscriptionId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      subscriptionId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DEVELOPER_NAME_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object developerName_ = "";
  /**
   * <code>string developer_name = 2;</code>
   * @return The developerName.
   */
  @java.lang.Override
  public java.lang.String getDeveloperName() {
    java.lang.Object ref = developerName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      developerName_ = s;
      return s;
    }
  }
  /**
   * <code>string developer_name = 2;</code>
   * @return The bytes for developerName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDeveloperNameBytes() {
    java.lang.Object ref = developerName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      developerName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NUM_REQUESTED_FIELD_NUMBER = 3;
  private int numRequested_ = 0;
  /**
   * <pre>
   *
   * Number of events a client is ready to accept. Each subsequent FetchRequest informs the server
   * of additional processing capacity available on the client side. There is no guarantee of equal number of
   * FetchResponse messages to be sent back. There is not necessarily a correspondence between
   * number of requested events in FetchRequest and the number of events returned in subsequent
   * FetchResponses.
   * </pre>
   *
   * <code>int32 num_requested = 3;</code>
   * @return The numRequested.
   */
  @java.lang.Override
  public int getNumRequested() {
    return numRequested_;
  }

  public static final int AUTH_REFRESH_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object authRefresh_ = "";
  /**
   * <pre>
   * For internal Salesforce use only.
   * </pre>
   *
   * <code>string auth_refresh = 4;</code>
   * @return The authRefresh.
   */
  @java.lang.Override
  public java.lang.String getAuthRefresh() {
    java.lang.Object ref = authRefresh_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      authRefresh_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * For internal Salesforce use only.
   * </pre>
   *
   * <code>string auth_refresh = 4;</code>
   * @return The bytes for authRefresh.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAuthRefreshBytes() {
    java.lang.Object ref = authRefresh_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      authRefresh_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COMMIT_REPLAY_ID_REQUEST_FIELD_NUMBER = 5;
  private com.salesforce.eventbus.protobuf.CommitReplayRequest commitReplayIdRequest_;
  /**
   * <code>.eventbus.v1.CommitReplayRequest commit_replay_id_request = 5;</code>
   * @return Whether the commitReplayIdRequest field is set.
   */
  @java.lang.Override
  public boolean hasCommitReplayIdRequest() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.eventbus.v1.CommitReplayRequest commit_replay_id_request = 5;</code>
   * @return The commitReplayIdRequest.
   */
  @java.lang.Override
  public com.salesforce.eventbus.protobuf.CommitReplayRequest getCommitReplayIdRequest() {
    return commitReplayIdRequest_ == null ? com.salesforce.eventbus.protobuf.CommitReplayRequest.getDefaultInstance() : commitReplayIdRequest_;
  }
  /**
   * <code>.eventbus.v1.CommitReplayRequest commit_replay_id_request = 5;</code>
   */
  @java.lang.Override
  public com.salesforce.eventbus.protobuf.CommitReplayRequestOrBuilder getCommitReplayIdRequestOrBuilder() {
    return commitReplayIdRequest_ == null ? com.salesforce.eventbus.protobuf.CommitReplayRequest.getDefaultInstance() : commitReplayIdRequest_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(subscriptionId_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, subscriptionId_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(developerName_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, developerName_);
    }
    if (numRequested_ != 0) {
      output.writeInt32(3, numRequested_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(authRefresh_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 4, authRefresh_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(5, getCommitReplayIdRequest());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(subscriptionId_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, subscriptionId_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(developerName_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, developerName_);
    }
    if (numRequested_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, numRequested_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(authRefresh_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(4, authRefresh_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getCommitReplayIdRequest());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.salesforce.eventbus.protobuf.ManagedFetchRequest)) {
      return super.equals(obj);
    }
    com.salesforce.eventbus.protobuf.ManagedFetchRequest other = (com.salesforce.eventbus.protobuf.ManagedFetchRequest) obj;

    if (!getSubscriptionId()
        .equals(other.getSubscriptionId())) return false;
    if (!getDeveloperName()
        .equals(other.getDeveloperName())) return false;
    if (getNumRequested()
        != other.getNumRequested()) return false;
    if (!getAuthRefresh()
        .equals(other.getAuthRefresh())) return false;
    if (hasCommitReplayIdRequest() != other.hasCommitReplayIdRequest()) return false;
    if (hasCommitReplayIdRequest()) {
      if (!getCommitReplayIdRequest()
          .equals(other.getCommitReplayIdRequest())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SUBSCRIPTION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSubscriptionId().hashCode();
    hash = (37 * hash) + DEVELOPER_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getDeveloperName().hashCode();
    hash = (37 * hash) + NUM_REQUESTED_FIELD_NUMBER;
    hash = (53 * hash) + getNumRequested();
    hash = (37 * hash) + AUTH_REFRESH_FIELD_NUMBER;
    hash = (53 * hash) + getAuthRefresh().hashCode();
    if (hasCommitReplayIdRequest()) {
      hash = (37 * hash) + COMMIT_REPLAY_ID_REQUEST_FIELD_NUMBER;
      hash = (53 * hash) + getCommitReplayIdRequest().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.salesforce.eventbus.protobuf.ManagedFetchRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.salesforce.eventbus.protobuf.ManagedFetchRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.salesforce.eventbus.protobuf.ManagedFetchRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.salesforce.eventbus.protobuf.ManagedFetchRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.salesforce.eventbus.protobuf.ManagedFetchRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.salesforce.eventbus.protobuf.ManagedFetchRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.salesforce.eventbus.protobuf.ManagedFetchRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.salesforce.eventbus.protobuf.ManagedFetchRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.salesforce.eventbus.protobuf.ManagedFetchRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.salesforce.eventbus.protobuf.ManagedFetchRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.salesforce.eventbus.protobuf.ManagedFetchRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.salesforce.eventbus.protobuf.ManagedFetchRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.salesforce.eventbus.protobuf.ManagedFetchRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *
   * This feature is part of an open beta release and is subject to the applicable
   * Beta Services Terms provided at Agreements and Terms
   * (https://www.salesforce.com/company/legal/agreements/).
   *
   * Request for the ManagedSubscribe streaming RPC method. This request is used to:
   * 1. Establish the initial managed subscribe stream.
   * 2. Request more events from the subscription stream.
   * 3. Commit a Replay ID using CommitReplayRequest.
   * </pre>
   *
   * Protobuf type {@code eventbus.v1.ManagedFetchRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:eventbus.v1.ManagedFetchRequest)
      com.salesforce.eventbus.protobuf.ManagedFetchRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.salesforce.eventbus.protobuf.PubSubProto.internal_static_eventbus_v1_ManagedFetchRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.salesforce.eventbus.protobuf.PubSubProto.internal_static_eventbus_v1_ManagedFetchRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.salesforce.eventbus.protobuf.ManagedFetchRequest.class, com.salesforce.eventbus.protobuf.ManagedFetchRequest.Builder.class);
    }

    // Construct using com.salesforce.eventbus.protobuf.ManagedFetchRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getCommitReplayIdRequestFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      subscriptionId_ = "";
      developerName_ = "";
      numRequested_ = 0;
      authRefresh_ = "";
      commitReplayIdRequest_ = null;
      if (commitReplayIdRequestBuilder_ != null) {
        commitReplayIdRequestBuilder_.dispose();
        commitReplayIdRequestBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.salesforce.eventbus.protobuf.PubSubProto.internal_static_eventbus_v1_ManagedFetchRequest_descriptor;
    }

    @java.lang.Override
    public com.salesforce.eventbus.protobuf.ManagedFetchRequest getDefaultInstanceForType() {
      return com.salesforce.eventbus.protobuf.ManagedFetchRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.salesforce.eventbus.protobuf.ManagedFetchRequest build() {
      com.salesforce.eventbus.protobuf.ManagedFetchRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.salesforce.eventbus.protobuf.ManagedFetchRequest buildPartial() {
      com.salesforce.eventbus.protobuf.ManagedFetchRequest result = new com.salesforce.eventbus.protobuf.ManagedFetchRequest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.salesforce.eventbus.protobuf.ManagedFetchRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.subscriptionId_ = subscriptionId_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.developerName_ = developerName_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.numRequested_ = numRequested_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.authRefresh_ = authRefresh_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.commitReplayIdRequest_ = commitReplayIdRequestBuilder_ == null
            ? commitReplayIdRequest_
            : commitReplayIdRequestBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.salesforce.eventbus.protobuf.ManagedFetchRequest) {
        return mergeFrom((com.salesforce.eventbus.protobuf.ManagedFetchRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.salesforce.eventbus.protobuf.ManagedFetchRequest other) {
      if (other == com.salesforce.eventbus.protobuf.ManagedFetchRequest.getDefaultInstance()) return this;
      if (!other.getSubscriptionId().isEmpty()) {
        subscriptionId_ = other.subscriptionId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getDeveloperName().isEmpty()) {
        developerName_ = other.developerName_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.getNumRequested() != 0) {
        setNumRequested(other.getNumRequested());
      }
      if (!other.getAuthRefresh().isEmpty()) {
        authRefresh_ = other.authRefresh_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (other.hasCommitReplayIdRequest()) {
        mergeCommitReplayIdRequest(other.getCommitReplayIdRequest());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              subscriptionId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              developerName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 24: {
              numRequested_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 34: {
              authRefresh_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getCommitReplayIdRequestFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object subscriptionId_ = "";
    /**
     * <pre>
     *
     * Managed subscription ID or developer name. This value corresponds to the
     * ID or developer name of the ManagedEventSubscription Tooling API record.
     * This value is consumed as part of the first ManagedFetchRequest only.
     * The subscription_id cannot change in subsequent ManagedFetchRequests
     * within the same subscribe stream, but can be omitted for efficiency.
     * </pre>
     *
     * <code>string subscription_id = 1;</code>
     * @return The subscriptionId.
     */
    public java.lang.String getSubscriptionId() {
      java.lang.Object ref = subscriptionId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        subscriptionId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *
     * Managed subscription ID or developer name. This value corresponds to the
     * ID or developer name of the ManagedEventSubscription Tooling API record.
     * This value is consumed as part of the first ManagedFetchRequest only.
     * The subscription_id cannot change in subsequent ManagedFetchRequests
     * within the same subscribe stream, but can be omitted for efficiency.
     * </pre>
     *
     * <code>string subscription_id = 1;</code>
     * @return The bytes for subscriptionId.
     */
    public com.google.protobuf.ByteString
        getSubscriptionIdBytes() {
      java.lang.Object ref = subscriptionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        subscriptionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *
     * Managed subscription ID or developer name. This value corresponds to the
     * ID or developer name of the ManagedEventSubscription Tooling API record.
     * This value is consumed as part of the first ManagedFetchRequest only.
     * The subscription_id cannot change in subsequent ManagedFetchRequests
     * within the same subscribe stream, but can be omitted for efficiency.
     * </pre>
     *
     * <code>string subscription_id = 1;</code>
     * @param value The subscriptionId to set.
     * @return This builder for chaining.
     */
    public Builder setSubscriptionId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      subscriptionId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *
     * Managed subscription ID or developer name. This value corresponds to the
     * ID or developer name of the ManagedEventSubscription Tooling API record.
     * This value is consumed as part of the first ManagedFetchRequest only.
     * The subscription_id cannot change in subsequent ManagedFetchRequests
     * within the same subscribe stream, but can be omitted for efficiency.
     * </pre>
     *
     * <code>string subscription_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearSubscriptionId() {
      subscriptionId_ = getDefaultInstance().getSubscriptionId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *
     * Managed subscription ID or developer name. This value corresponds to the
     * ID or developer name of the ManagedEventSubscription Tooling API record.
     * This value is consumed as part of the first ManagedFetchRequest only.
     * The subscription_id cannot change in subsequent ManagedFetchRequests
     * within the same subscribe stream, but can be omitted for efficiency.
     * </pre>
     *
     * <code>string subscription_id = 1;</code>
     * @param value The bytes for subscriptionId to set.
     * @return This builder for chaining.
     */
    public Builder setSubscriptionIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      subscriptionId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object developerName_ = "";
    /**
     * <code>string developer_name = 2;</code>
     * @return The developerName.
     */
    public java.lang.String getDeveloperName() {
      java.lang.Object ref = developerName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        developerName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string developer_name = 2;</code>
     * @return The bytes for developerName.
     */
    public com.google.protobuf.ByteString
        getDeveloperNameBytes() {
      java.lang.Object ref = developerName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        developerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string developer_name = 2;</code>
     * @param value The developerName to set.
     * @return This builder for chaining.
     */
    public Builder setDeveloperName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      developerName_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>string developer_name = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearDeveloperName() {
      developerName_ = getDefaultInstance().getDeveloperName();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>string developer_name = 2;</code>
     * @param value The bytes for developerName to set.
     * @return This builder for chaining.
     */
    public Builder setDeveloperNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      developerName_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private int numRequested_ ;
    /**
     * <pre>
     *
     * Number of events a client is ready to accept. Each subsequent FetchRequest informs the server
     * of additional processing capacity available on the client side. There is no guarantee of equal number of
     * FetchResponse messages to be sent back. There is not necessarily a correspondence between
     * number of requested events in FetchRequest and the number of events returned in subsequent
     * FetchResponses.
     * </pre>
     *
     * <code>int32 num_requested = 3;</code>
     * @return The numRequested.
     */
    @java.lang.Override
    public int getNumRequested() {
      return numRequested_;
    }
    /**
     * <pre>
     *
     * Number of events a client is ready to accept. Each subsequent FetchRequest informs the server
     * of additional processing capacity available on the client side. There is no guarantee of equal number of
     * FetchResponse messages to be sent back. There is not necessarily a correspondence between
     * number of requested events in FetchRequest and the number of events returned in subsequent
     * FetchResponses.
     * </pre>
     *
     * <code>int32 num_requested = 3;</code>
     * @param value The numRequested to set.
     * @return This builder for chaining.
     */
    public Builder setNumRequested(int value) {

      numRequested_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *
     * Number of events a client is ready to accept. Each subsequent FetchRequest informs the server
     * of additional processing capacity available on the client side. There is no guarantee of equal number of
     * FetchResponse messages to be sent back. There is not necessarily a correspondence between
     * number of requested events in FetchRequest and the number of events returned in subsequent
     * FetchResponses.
     * </pre>
     *
     * <code>int32 num_requested = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearNumRequested() {
      bitField0_ = (bitField0_ & ~0x00000004);
      numRequested_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object authRefresh_ = "";
    /**
     * <pre>
     * For internal Salesforce use only.
     * </pre>
     *
     * <code>string auth_refresh = 4;</code>
     * @return The authRefresh.
     */
    public java.lang.String getAuthRefresh() {
      java.lang.Object ref = authRefresh_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        authRefresh_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * For internal Salesforce use only.
     * </pre>
     *
     * <code>string auth_refresh = 4;</code>
     * @return The bytes for authRefresh.
     */
    public com.google.protobuf.ByteString
        getAuthRefreshBytes() {
      java.lang.Object ref = authRefresh_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        authRefresh_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * For internal Salesforce use only.
     * </pre>
     *
     * <code>string auth_refresh = 4;</code>
     * @param value The authRefresh to set.
     * @return This builder for chaining.
     */
    public Builder setAuthRefresh(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      authRefresh_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * For internal Salesforce use only.
     * </pre>
     *
     * <code>string auth_refresh = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearAuthRefresh() {
      authRefresh_ = getDefaultInstance().getAuthRefresh();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * For internal Salesforce use only.
     * </pre>
     *
     * <code>string auth_refresh = 4;</code>
     * @param value The bytes for authRefresh to set.
     * @return This builder for chaining.
     */
    public Builder setAuthRefreshBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      authRefresh_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private com.salesforce.eventbus.protobuf.CommitReplayRequest commitReplayIdRequest_;
    private com.google.protobuf.SingleFieldBuilder<
        com.salesforce.eventbus.protobuf.CommitReplayRequest, com.salesforce.eventbus.protobuf.CommitReplayRequest.Builder, com.salesforce.eventbus.protobuf.CommitReplayRequestOrBuilder> commitReplayIdRequestBuilder_;
    /**
     * <code>.eventbus.v1.CommitReplayRequest commit_replay_id_request = 5;</code>
     * @return Whether the commitReplayIdRequest field is set.
     */
    public boolean hasCommitReplayIdRequest() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>.eventbus.v1.CommitReplayRequest commit_replay_id_request = 5;</code>
     * @return The commitReplayIdRequest.
     */
    public com.salesforce.eventbus.protobuf.CommitReplayRequest getCommitReplayIdRequest() {
      if (commitReplayIdRequestBuilder_ == null) {
        return commitReplayIdRequest_ == null ? com.salesforce.eventbus.protobuf.CommitReplayRequest.getDefaultInstance() : commitReplayIdRequest_;
      } else {
        return commitReplayIdRequestBuilder_.getMessage();
      }
    }
    /**
     * <code>.eventbus.v1.CommitReplayRequest commit_replay_id_request = 5;</code>
     */
    public Builder setCommitReplayIdRequest(com.salesforce.eventbus.protobuf.CommitReplayRequest value) {
      if (commitReplayIdRequestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        commitReplayIdRequest_ = value;
      } else {
        commitReplayIdRequestBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>.eventbus.v1.CommitReplayRequest commit_replay_id_request = 5;</code>
     */
    public Builder setCommitReplayIdRequest(
        com.salesforce.eventbus.protobuf.CommitReplayRequest.Builder builderForValue) {
      if (commitReplayIdRequestBuilder_ == null) {
        commitReplayIdRequest_ = builderForValue.build();
      } else {
        commitReplayIdRequestBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>.eventbus.v1.CommitReplayRequest commit_replay_id_request = 5;</code>
     */
    public Builder mergeCommitReplayIdRequest(com.salesforce.eventbus.protobuf.CommitReplayRequest value) {
      if (commitReplayIdRequestBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          commitReplayIdRequest_ != null &&
          commitReplayIdRequest_ != com.salesforce.eventbus.protobuf.CommitReplayRequest.getDefaultInstance()) {
          getCommitReplayIdRequestBuilder().mergeFrom(value);
        } else {
          commitReplayIdRequest_ = value;
        }
      } else {
        commitReplayIdRequestBuilder_.mergeFrom(value);
      }
      if (commitReplayIdRequest_ != null) {
        bitField0_ |= 0x00000010;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.eventbus.v1.CommitReplayRequest commit_replay_id_request = 5;</code>
     */
    public Builder clearCommitReplayIdRequest() {
      bitField0_ = (bitField0_ & ~0x00000010);
      commitReplayIdRequest_ = null;
      if (commitReplayIdRequestBuilder_ != null) {
        commitReplayIdRequestBuilder_.dispose();
        commitReplayIdRequestBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.eventbus.v1.CommitReplayRequest commit_replay_id_request = 5;</code>
     */
    public com.salesforce.eventbus.protobuf.CommitReplayRequest.Builder getCommitReplayIdRequestBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getCommitReplayIdRequestFieldBuilder().getBuilder();
    }
    /**
     * <code>.eventbus.v1.CommitReplayRequest commit_replay_id_request = 5;</code>
     */
    public com.salesforce.eventbus.protobuf.CommitReplayRequestOrBuilder getCommitReplayIdRequestOrBuilder() {
      if (commitReplayIdRequestBuilder_ != null) {
        return commitReplayIdRequestBuilder_.getMessageOrBuilder();
      } else {
        return commitReplayIdRequest_ == null ?
            com.salesforce.eventbus.protobuf.CommitReplayRequest.getDefaultInstance() : commitReplayIdRequest_;
      }
    }
    /**
     * <code>.eventbus.v1.CommitReplayRequest commit_replay_id_request = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.salesforce.eventbus.protobuf.CommitReplayRequest, com.salesforce.eventbus.protobuf.CommitReplayRequest.Builder, com.salesforce.eventbus.protobuf.CommitReplayRequestOrBuilder> 
        getCommitReplayIdRequestFieldBuilder() {
      if (commitReplayIdRequestBuilder_ == null) {
        commitReplayIdRequestBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.salesforce.eventbus.protobuf.CommitReplayRequest, com.salesforce.eventbus.protobuf.CommitReplayRequest.Builder, com.salesforce.eventbus.protobuf.CommitReplayRequestOrBuilder>(
                getCommitReplayIdRequest(),
                getParentForChildren(),
                isClean());
        commitReplayIdRequest_ = null;
      }
      return commitReplayIdRequestBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:eventbus.v1.ManagedFetchRequest)
  }

  // @@protoc_insertion_point(class_scope:eventbus.v1.ManagedFetchRequest)
  private static final com.salesforce.eventbus.protobuf.ManagedFetchRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.salesforce.eventbus.protobuf.ManagedFetchRequest();
  }

  public static com.salesforce.eventbus.protobuf.ManagedFetchRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ManagedFetchRequest>
      PARSER = new com.google.protobuf.AbstractParser<ManagedFetchRequest>() {
    @java.lang.Override
    public ManagedFetchRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ManagedFetchRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ManagedFetchRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.salesforce.eventbus.protobuf.ManagedFetchRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

