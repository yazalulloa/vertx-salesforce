// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: pubsub_api.proto
// Protobuf Java Version: 4.27.3

package com.salesforce.eventbus.protobuf;

public interface FetchRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:eventbus.v1.FetchRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   *
   * Identifies a topic for subscription in the very first FetchRequest of the stream. The topic cannot change
   * in subsequent FetchRequests within the same subscribe stream, but can be omitted for efficiency.
   * </pre>
   *
   * <code>string topic_name = 1;</code>
   * @return The topicName.
   */
  java.lang.String getTopicName();
  /**
   * <pre>
   *
   * Identifies a topic for subscription in the very first FetchRequest of the stream. The topic cannot change
   * in subsequent FetchRequests within the same subscribe stream, but can be omitted for efficiency.
   * </pre>
   *
   * <code>string topic_name = 1;</code>
   * @return The bytes for topicName.
   */
  com.google.protobuf.ByteString
      getTopicNameBytes();

  /**
   * <pre>
   *
   * Subscription starting point. This is consumed only as part of the first FetchRequest
   * when the subscription is set up.
   * </pre>
   *
   * <code>.eventbus.v1.ReplayPreset replay_preset = 2;</code>
   * @return The enum numeric value on the wire for replayPreset.
   */
  int getReplayPresetValue();
  /**
   * <pre>
   *
   * Subscription starting point. This is consumed only as part of the first FetchRequest
   * when the subscription is set up.
   * </pre>
   *
   * <code>.eventbus.v1.ReplayPreset replay_preset = 2;</code>
   * @return The replayPreset.
   */
  com.salesforce.eventbus.protobuf.ReplayPreset getReplayPreset();

  /**
   * <pre>
   *
   * If replay_preset of CUSTOM is selected, specify the subscription point to start after.
   * This is consumed only as part of the first FetchRequest when the subscription is set up.
   * </pre>
   *
   * <code>bytes replay_id = 3;</code>
   * @return The replayId.
   */
  com.google.protobuf.ByteString getReplayId();

  /**
   * <pre>
   *
   * Number of events a client is ready to accept. Each subsequent FetchRequest informs the server
   * of additional processing capacity available on the client side. There is no guarantee of equal number of
   * FetchResponse messages to be sent back. There is not necessarily a correspondence between
   * number of requested events in FetchRequest and the number of events returned in subsequent
   * FetchResponses.
   * </pre>
   *
   * <code>int32 num_requested = 4;</code>
   * @return The numRequested.
   */
  int getNumRequested();

  /**
   * <pre>
   * For internal Salesforce use only.
   * </pre>
   *
   * <code>string auth_refresh = 5;</code>
   * @return The authRefresh.
   */
  java.lang.String getAuthRefresh();
  /**
   * <pre>
   * For internal Salesforce use only.
   * </pre>
   *
   * <code>string auth_refresh = 5;</code>
   * @return The bytes for authRefresh.
   */
  com.google.protobuf.ByteString
      getAuthRefreshBytes();
}
