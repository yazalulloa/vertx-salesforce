// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: pubsub_api.proto
// Protobuf Java Version: 4.27.3

package com.salesforce.eventbus.protobuf;

public interface ManagedFetchRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:eventbus.v1.ManagedFetchRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   *
   * Managed subscription ID or developer name. This value corresponds to the
   * ID or developer name of the ManagedEventSubscription Tooling API record.
   * This value is consumed as part of the first ManagedFetchRequest only.
   * The subscription_id cannot change in subsequent ManagedFetchRequests
   * within the same subscribe stream, but can be omitted for efficiency.
   * </pre>
   *
   * <code>string subscription_id = 1;</code>
   * @return The subscriptionId.
   */
  java.lang.String getSubscriptionId();
  /**
   * <pre>
   *
   * Managed subscription ID or developer name. This value corresponds to the
   * ID or developer name of the ManagedEventSubscription Tooling API record.
   * This value is consumed as part of the first ManagedFetchRequest only.
   * The subscription_id cannot change in subsequent ManagedFetchRequests
   * within the same subscribe stream, but can be omitted for efficiency.
   * </pre>
   *
   * <code>string subscription_id = 1;</code>
   * @return The bytes for subscriptionId.
   */
  com.google.protobuf.ByteString
      getSubscriptionIdBytes();

  /**
   * <code>string developer_name = 2;</code>
   * @return The developerName.
   */
  java.lang.String getDeveloperName();
  /**
   * <code>string developer_name = 2;</code>
   * @return The bytes for developerName.
   */
  com.google.protobuf.ByteString
      getDeveloperNameBytes();

  /**
   * <pre>
   *
   * Number of events a client is ready to accept. Each subsequent FetchRequest informs the server
   * of additional processing capacity available on the client side. There is no guarantee of equal number of
   * FetchResponse messages to be sent back. There is not necessarily a correspondence between
   * number of requested events in FetchRequest and the number of events returned in subsequent
   * FetchResponses.
   * </pre>
   *
   * <code>int32 num_requested = 3;</code>
   * @return The numRequested.
   */
  int getNumRequested();

  /**
   * <pre>
   * For internal Salesforce use only.
   * </pre>
   *
   * <code>string auth_refresh = 4;</code>
   * @return The authRefresh.
   */
  java.lang.String getAuthRefresh();
  /**
   * <pre>
   * For internal Salesforce use only.
   * </pre>
   *
   * <code>string auth_refresh = 4;</code>
   * @return The bytes for authRefresh.
   */
  com.google.protobuf.ByteString
      getAuthRefreshBytes();

  /**
   * <code>.eventbus.v1.CommitReplayRequest commit_replay_id_request = 5;</code>
   * @return Whether the commitReplayIdRequest field is set.
   */
  boolean hasCommitReplayIdRequest();
  /**
   * <code>.eventbus.v1.CommitReplayRequest commit_replay_id_request = 5;</code>
   * @return The commitReplayIdRequest.
   */
  com.salesforce.eventbus.protobuf.CommitReplayRequest getCommitReplayIdRequest();
  /**
   * <code>.eventbus.v1.CommitReplayRequest commit_replay_id_request = 5;</code>
   */
  com.salesforce.eventbus.protobuf.CommitReplayRequestOrBuilder getCommitReplayIdRequestOrBuilder();
}
